//
//  GameSetupViewController.m
//  Pictaphone
//
//  Created by Kelly Hutchison on 11/22/14.
//  Copyright (c) 2014 Kelly Hutchison. All rights reserved.
//

#import "GameSetupViewController.h"
#import "DrawingViewController.h"
#import "TypingViewController.h"
#import "KMHCustomSegue.h"
#import "model.h"

@interface GameSetupViewController ()
@property (nonatomic,strong) model *model;
@property (nonatomic,assign) NSString *currentGameMode;
@property (nonatomic,assign) NSString *pictureOrWordsFirst;

@property (nonatomic,assign) NSString *randomPhrase;
@property (nonatomic,assign) UIImage *randomImage;

@property (weak, nonatomic) IBOutlet UILabel *playerCount;
- (IBAction)playerCountChanged:(id)sender;
@property (weak, nonatomic) IBOutlet UIStepper *playerCountStepper;


@property (weak, nonatomic) IBOutlet UILabel *roundCount;
- (IBAction)roundCountChanged:(id)sender;
@property (weak, nonatomic) IBOutlet UIStepper *roundCountStepper;

- (IBAction)pictureOrWordsPressed:(id)sender;

- (IBAction)autoGenerateFirstRoundToggled:(id)sender;
@property (weak, nonatomic) IBOutlet UISwitch *autoGenerateFirstRoundSwitch;
@property (weak, nonatomic) IBOutlet UILabel *autoGenerateFirstRoundIndicator;

- (IBAction)playButtonPressed:(id)sender;
@property (weak, nonatomic) IBOutlet UIButton *drawingPlayButton;
@property (weak, nonatomic) IBOutlet UIButton *typingPlayButton;

@end

@implementation GameSetupViewController

- (id)initWithCoder:(NSCoder *)aDecoder
{
    self = [super initWithCoder:aDecoder];
    if (self) {
        // Custom initialization
        _model = [model sharedInstance];
    }
    return self;
}

- (void)viewDidLoad
{
    [super viewDidLoad];
    // Do any additional setup after loading the view.
    self.view.opaque = YES;
    self.view.backgroundColor = [UIColor whiteColor];
    
    // Determine which game mode we are running in (single or multi)
    self.currentGameMode = self.gameMode;
    
    [self initializeAutoGenerateFirstRoundSettings];
    [self initializeGameSettingsDefaults];
}

- (void)didReceiveMemoryWarning
{
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}

- (void)initializeGameSettingsDefaults
{
    // ---- begin Player Count Settings ----
    // Default player count is 4
    self.playerCount.text = @"4";
    self.playerCountStepper.value = 4;
    
    
    // Set stepper min and max values
    if([self.currentGameMode  isEqual: @"multi"]) {
        self.playerCountStepper.maximumValue = 4;
    }
    else {
        self.playerCountStepper.maximumValue = 50;
    }
    self.playerCountStepper.minimumValue = 2;
    self.playerCountStepper.stepValue = 1;
    // --- end Player Count Settings ---
    
    
    // ---- begin Round Count Settings ----
    // Default round count is 1
    self.roundCount.text = @"1";
    self.roundCountStepper.value = 1;
    
    // Set stepper min and max values
    self.roundCountStepper.maximumValue = 10;
    self.roundCountStepper.minimumValue = 1;
    self.roundCountStepper.stepValue = 1;
    // --- end Round Count Settings ---
    
    // --- begin Picture or Words First Setup ---
    self.pictureOrWordsFirst = @"picture";
    self.drawingPlayButton.hidden = NO;
    self.typingPlayButton.hidden = YES;
    // --- end Picture or Words First Setup ---

}

- (void)initializeAutoGenerateFirstRoundSettings
{
    self.autoGenerateFirstRoundIndicator.text = @"No";
    self.autoGenerateFirstRoundSwitch.on = FALSE;
}


#pragma mark - Navigation

// In a storyboard-based application, you will often want to do a little preparation before navigation
- (void)prepareForSegue:(UIStoryboardSegue *)segue sender:(id)sender
{
    BOOL autoGeneratedSwitchValue = self.autoGenerateFirstRoundSwitch.isOn;
    
    if([self.pictureOrWordsFirst isEqual:@"picture"])
    {
        DrawingViewController *dvc = segue.destinationViewController;
        dvc.autoGenerate = autoGeneratedSwitchValue;
        
        // Set auto random phrase
        self.randomPhrase = [self.model randomPhrase];
        [self.model storeChosenRandomPhrase:self.randomPhrase];
        dvc.randomPhrase = self.randomPhrase;
    }
    else if ([self.pictureOrWordsFirst isEqual:@"words"])
    {
        TypingViewController *tvc = segue.destinationViewController;
        tvc.autoGenerate = autoGeneratedSwitchValue;
        
        // Set auto random image
        self.randomImage = [self.model randomImage];
        [self.model storeChosenRandomImage:self.randomImage];
        tvc.randomImage = self.randomImage;
    }

    NSInteger numPlayers = self.playerCountStepper.value;
    NSInteger numTurns = self.roundCountStepper.value * numPlayers;
    
    // Pass settings info to model
    [self.model storePlayerCount:numPlayers];
    [self.model storeTurnCount:numTurns];
    [self.model storeFirstRoundType:self.pictureOrWordsFirst];
    [self.model storeAutoGeneratedFirstRoundType:autoGeneratedSwitchValue];
    [self.model initializeContentsArray];
}


- (IBAction)playerCountChanged:(id)sender {
    
    UIStepper* stepper = (UIStepper*)sender;
    double value = [stepper value];
    
    [self.playerCount setText:[NSString stringWithFormat:@"%d", (int)value]];
}

- (IBAction)roundCountChanged:(id)sender {
    UIStepper* stepper = (UIStepper*)sender;
    double value = [stepper value];
    
    [self.roundCount setText:[NSString stringWithFormat:@"%d", (int)value]];
}

- (IBAction)pictureOrWordsPressed:(id)sender {
    UISegmentedControl* control = (UISegmentedControl*)sender;
    NSInteger segmentPressed = control.selectedSegmentIndex;
    
    // Picture first
    if(segmentPressed == 0)
    {
        self.pictureOrWordsFirst = @"picture";
        self.drawingPlayButton.hidden = NO;
        self.typingPlayButton.hidden = YES;
    }
    // Words fisrt 
    else
    {
        self.pictureOrWordsFirst = @"words";
        self.drawingPlayButton.hidden = YES;
        self.typingPlayButton.hidden = NO;
    }
}

- (IBAction)autoGenerateFirstRoundToggled:(id)sender {
    UISwitch *firstRoundSwitch = (UISwitch*) sender;
    
    if(firstRoundSwitch.on == FALSE)
    {
        self.autoGenerateFirstRoundSwitch.on = FALSE;
        self.autoGenerateFirstRoundIndicator.text = @"No";
    }
    else
    {
        self.autoGenerateFirstRoundSwitch.on = TRUE;
        self.autoGenerateFirstRoundIndicator.text = @"Yes";
    }
    
    
}
- (IBAction)playButtonPressed:(id)sender
{
}


@end
